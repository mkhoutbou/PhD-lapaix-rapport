openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8082
  description: Generated server url
paths:
  /api/reports/{id}:
    get:
      tags:
      - report-service
      operationId: getReportById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Report'
    put:
      tags:
      - report-service
      operationId: updateReport
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Report'
    delete:
      tags:
      - report-service
      operationId: deleteReport
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
  /api/elementResults/{id}:
    get:
      tags:
      - element-result-service
      operationId: getElementResultById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ElementResult'
    put:
      tags:
      - element-result-service
      operationId: updateElementResult
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElementResult'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ElementResult'
    delete:
      tags:
      - element-result-service
      operationId: deleteElementResult
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
  /api/reports:
    get:
      tags:
      - report-service
      operationId: getAllReports
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      - name: search_string
        in: query
        required: false
        schema:
          type: string
          default: ""
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
    post:
      tags:
      - report-service
      operationId: createReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Report'
  /api/elementResults:
    get:
      tags:
      - element-result-service
      operationId: getAllElementResults
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      - name: search_string
        in: query
        required: false
        schema:
          type: string
          default: ""
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ElementResult'
    post:
      tags:
      - element-result-service
      operationId: createElementResult
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElementResult'
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ElementResult'
  /api/reports/{reportId}/elementResults:
    get:
      tags:
      - report-service
      operationId: getReportElementResults
      parameters:
      - name: reportId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ElementResult'
  /api/reports/count:
    get:
      tags:
      - report-service
      operationId: count
      parameters:
      - name: search_string
        in: query
        required: false
        schema:
          type: string
          default: ""
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int64
  /api/elementResults/count:
    get:
      tags:
      - element-result-service
      operationId: count_1
      parameters:
      - name: search_string
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int64
components:
  schemas:
    Report:
      type: object
      properties:
        id:
          type: integer
          format: int64
        bulletinId:
          type: integer
          format: int64
        codeReport:
          type: string
        date:
          type: string
          format: date-time
        titre:
          type: string
        medecin:
          type: string
        conclusion:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedDate:
          type: string
          format: date-time
    ElementResult:
      type: object
      properties:
        id:
          type: integer
          format: int64
        report:
          $ref: '#/components/schemas/Report'
        resultatGeneral:
          type: boolean
        description:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedDate:
          type: string
          format: date-time
